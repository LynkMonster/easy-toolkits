#!/usr/bin/env python3
import json
import argparse
import re

rex_none = re.compile('None|nill|none')
rex_comma = re.compile("'")
rex_datetime = re.compile(r'datetime\.datetime\((.+?)\)')


def strip(string):
    string = rex_none.sub('null', string)
    string = rex_comma.sub('"', string)
    string = rex_datetime.sub(r'"datetime.datetime(\1)"', string)
    print(string)
    return string


def jprint(string, indent=4):
    try:
        obj = json.loads(string)

    except:
        s = strip(string)
        obj = json.loads(s)

    print(json.dumps(obj, indent=indent))


def run():
    parser = argparse.ArgumentParser(description='tool to print json in python format')
    parser.add_argument('string', default='', nargs='?',
                        help='the json object you want to read')

    parser.add_argument('--file', '-f',
                        help='the file where this tool will read json object')

    parser.add_argument('--limit', '-l', type=int, default=0,
                        help='the amount of rows within the '
                             'file you want to print, the default is no limits')

    parser.add_argument('--indent', '-i', default=4, help='the indents to print json object')
    args = parser.parse_args()

    if args.string:
        jprint(args.string)

    else:
        cnt = 0
        with open(args.file, 'r') as fd:

            for line in fd:
                if 0 < args.limit <= cnt:
                    return

                jprint(line)
                cnt += 1


if __name__ == '__main__':
    run()
